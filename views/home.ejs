<html lang="en">

<head>
	<meta charset="utf-8">

	<title>Hydroponic Dashboard</title>
	<meta name="description" content="The HTML5 Herald">
	<meta name="author" content="SitePoint">
	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
	<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
	<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
	<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
	<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>

	
	<style>
		
		.card-title {
			font-size:100px
		}
		
		.container {
			margin-top: 40px;
		}
		
		.card {
			text-align:center;
			color:white;
			background-color: #343a40!important
		}
		body {
			background-color: #121212;
		}
	
		#myChart {
			background-color: #121212;
		}
		
		/* The switch - the box around the slider */
.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

/* Hide default HTML checkbox */
.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

/* The slider */
.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
}

.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}

input:checked + .slider {
  background-color: #2196F3;
}

input:focus + .slider {
  box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}
	</style>
</head>

<body>
	
	<div class="card text-center">
  <div class="card-header">

  </div>
  <div class="card-body">
    <h5 class="card-title"><span id="date"></span></h5>
    <p class="card-text">With supporting text below as a natural lead-in to additional content.</p>
<label class="switch">
  <input id="light" type="checkbox">
  <span class="slider round"></span>
</label>
  </div>
  <div class="card-footer text-muted">
  
  </div>
</div>
	
		<div class="container">

		<div class="row mx-auto">
			<div class="col">

	<div class="card text-white bg-dark mb-3" style="max-width: 18rem;">
  <div class="card-header">Current Temperature</div>
  <div class="card-body">
    <h5 class="card-title"><span id="temp"></span> <span style="font-size: 50px; margin-left: -30px;">Â°C</span></h5>
    <p class="card-text"></p>
  </div>
</div>
			</div>
					<div class="col">

	<div class="card text-white bg-dark mb-3" style="max-width: 18rem;">
  <div class="card-header">Current Humidity</div>
  <div class="card-body">
    <h5 class="card-title"><span id="hum"></span>> <span style="font-size: 50px; margin-left: -30px;">%</span></h5>
    <p class="card-text"></p>
  </div>
</div>
			</div>
					<div class="col">

	<div class="card text-white bg-dark mb-3" style="max-width: 18rem;">
  <div class="card-header"> Atmospheric Pressure (hpa)</div>
  <div class="card-body">
    <h5 class="card-title"><span id="pres"></span></h5>
    <p class="card-text"></p>
  </div>
</div>
			</div>
					<div class="col">

	<div class="card text-white bg-dark mb-3" style="max-width: 18rem;">
  <div class="card-header">Current Wind Speed (m/s)</div>
  <div class="card-body">
    <h5 class="card-title"><span id="wind"></span> </h5>
    <p class="card-text"></p>
  </div>
</div>
			</div>

		</div>
	</div>


	<div class="container">

		<div class="row mx-auto">
			<div class="col">

				<div class="card mb-3">
					<canvas id="myChart"></canvas>
					<div class="card-body">
						<h5 class="card-title" style="font-size: 50px;">Tbilisi 5 Day Forecast</h5>
					
						<p class="card-text">
							
						</p>
					</div>
				</div>
				
			</div>

		</div>
	
	</div>

	
		<div class="container">

		<div class="row mx-auto">
			<div class="col">

	<div class="card text-white bg-dark mb-3" style="max-width: 18rem;">
  <div class="card-header">Moon Phase</div>
  <div class="card-body">
    	<div id="ex1"></div>
    <p class="card-text"></p>
  </div>
</div>
			</div>
					<div class="col">

	<div class="card text-white bg-dark mb-3" style="max-width: 18rem;">
  <div class="card-header">Sunshine Duration</div>
  <div class="card-body">
    <h5 class="card-title"><span id="sunshine"></span></h5>
    <p class="card-text"></p>
  </div>
</div>
			</div>
					<div class="col">

	<div class="card text-white bg-dark mb-3" style="max-width: 18rem;">
  <div class="card-header"> Sunrise </div>
  <div class="card-body">
    <h5 style="font-size: 50px;" class="card-title"><span id="sunrise"></span></h5>
    <p class="card-text"></p>
  </div>
</div>
			</div>
					<div class="col">

	<div class="card text-white bg-dark mb-3" style="max-width: 18rem;">
  <div class="card-header"> Sunset</div>
  <div class="card-body">
    <h5 style="font-size: 50px;" class="card-title"><span id="sunset"></span></h5>
    <p class="card-text"></p>
  </div>
</div>
			</div>

		</div>
	</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.3/socket.io.js"></script> <!-- include socket.io client side script -->
<script>
var socket = io(); //load socket.io-client and connect to the host that serves the page
window.addEventListener("load", function(){ //when page loads
  var lightbox = document.getElementById("light");
  lightbox.addEventListener("change", function() { //add event listener for when checkbox changes
    socket.emit("light", Number(this.checked)); //send button status to server (as 1 or 0)
  });
});
socket.on('light', function (data) { //get button status from client
  document.getElementById("light").checked = data; //change checkbox according to push button on Raspberry Pi
  socket.emit("light", data); //send push button status to back to server
});
</script>
	<script>
		var foundData = 12;
		var weatherData = {
			temp: [],
			hum: [],
			dt: []
		}
		loadDoc()
		loadToday()

		function loadDoc() {
			var xhttp = new XMLHttpRequest();
			xhttp.onreadystatechange = function() {
				if (this.readyState == 4 && this.status == 200) {
					foundData = JSON.parse(this.responseText);
					foundData.list.forEach(function(forecast) {
						weatherData.temp.push(forecast.main.temp)
						weatherData.hum.push(forecast.main.humidity)
						weatherData.dt.push(forecast.dt_txt)
					})
					loadCharts()
					return foundData.main.temp
				}
			};
			xhttp.open("GET", "https://api.openweathermap.org/data/2.5/forecast?q=tbilisi&appid=6089f6509a50304980cd0037f70fe8b1&units=metric", true);
			xhttp.send();
		}
		
		function loadToday() {
			var xhttp = new XMLHttpRequest();
			xhttp.onreadystatechange = function() {
				if (this.readyState == 4 && this.status == 200) {
					var foundWeather = JSON.parse(this.responseText);
					var str = ((weatherData.sys.sunset*1000) - (weatherData.sys.sunrise*1000))/1000/60/60 %> <%= %>
					$("#date").html(new Date(Date.now()).toLocaleString())
					$("#temp").html(foundWeather.main.temp)
				    $("#hum").html(foundWeather.main.humidity)
					$("#pres").html(foundWeather.main.pressure)
					$("#wind").html(foundWeather.wind.speed)
					$("#sunrise").html(new Date((foundWeather.sys.sunrise + (240 * 60) ) * 1000).toLocaleString().substring(11))
					$("#sunset").html(new Date((foundWeather.sys.sunset + (240 * 60) ) * 1000).toLocaleString().substring(11))
					$("#sunshine").html(str.toFixed(1))
				}
			};
			xhttp.open("GET", "https://api.openweathermap.org/data/2.5/weather?q=tbilisi&appid=6089f6509a50304980cd0037f70fe8b1&units=metric'", true);
			xhttp.send();
		}

		function loadCharts() {
			var ctx = document.getElementById('myChart').getContext('2d');
			var chart = new Chart(ctx, {
				// The type of chart we want to create
				type: 'line',
				// The data for our dataset
				data: {
					labels: weatherData.dt,
					datasets: [{
						label: 'Temperature',
						
						backgroundColor: 'rgb(255, 99, 132)',
						borderColor: 'rgb(255, 99, 132)',
						lineTension: 0.5,
						fill: "False",
						data: weatherData.temp,
						pointRadius: 2,
					},
					{
						label: 'Humidity',
						backgroundColor: 'rgb(99, 128, 255)',
						borderColor: 'rgb(99, 128, 255)',
						lineTension: 0.5,
						fill: "False",
						data: weatherData.hum,
						pointRadius: 2,
					}
							   ]
							   
							   
				},
				// Configuration options go here
				options: {
        legend: {
            display: true,
            labels: {
                fontColor: 'rgb(255,255,255)',
            }
        }
    }
			});
		}
	</script>
<script type="text/javascript">
	
		
function load_moon_phases(obj){
	var gets=[]
	for (var i in obj){
		gets.push(i+"="+encodeURIComponent(obj[i]))
	}	
	var xmlhttp = new XMLHttpRequest()
	var url = "https://www.icalendar37.net/lunar/api/?"+gets.join("&")
	xmlhttp.onreadystatechange = function() {
		if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
			var moon  = JSON.parse(xmlhttp.responseText)
			example_1(moon)
			example_2(moon)
			example_3(moon)	
		}
	}
	xmlhttp.open("GET", url, true)
	xmlhttp.send()
}
document.addEventListener("DOMContentLoaded", function() { 
	var configMoon = {
		lang  		:'en', // 'ca' 'de' 'en' 'es' 'fr' 'it' 'pl' 'pt' 'ru' 'zh' (*)
		month 		:new Date().getMonth() + 1, // 1  - 12
		year  		:new Date().getFullYear(),
		size		:50, //pixels
		lightColor	:"#FFFF88", //CSS color
		shadeColor	:"#111111", //CSS color
		sizeQuarter	:20, //pixels
		texturize	:false //true - false
	}
	configMoon.LDZ=new Date(configMoon.year,configMoon.month-1,1)/1000
	load_moon_phases(configMoon)
})
function example_1(moon){
	var day = new Date().getDate()
	var dayWeek=moon.phase[day].dayWeek
	var html="<div class='moon'>"

	html+=moon.phase[day].svg
	html+="<div>"+moon.phase[day].phaseName + " "+ Math.round(moon.phase[day].lighting)+"%</div>"
	html+="</div>"
	document.getElementById("ex1").innerHTML=html
}
</script>
</body>

</html>